// Code generated by mockery v2.14.0. DO NOT EDIT.

package mockery

import mock "github.com/stretchr/testify/mock"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// ValueAtTime provides a mock function with given fields: from, to, timestamp
func (_m *Client) ValueAtTime(from string, to string, timestamp int64) (float64, error) {
	ret := _m.Called(from, to, timestamp)

	var r0 float64
	if rf, ok := ret.Get(0).(func(string, string, int64) float64); ok {
		r0 = rf(from, to, timestamp)
	} else {
		r0 = ret.Get(0).(float64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, int64) error); ok {
		r1 = rf(from, to, timestamp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClient(t mockConstructorTestingTNewClient) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
